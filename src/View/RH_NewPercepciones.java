/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Conexion.Conexion;
import Controller.EJefes;
import Controller.PercepcionesDeducciones;
import Controller.Rincidencia;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Programacion 04
 */
public class RH_NewPercepciones extends javax.swing.JFrame {

    private TableRowSorter trsFiltro;
    int x, y;
    Connection conn;
    PreparedStatement stmt;
    public static ResultSet rs;
    private Connection userConn;

    public RH_NewPercepciones() throws SQLException {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(new java.awt.Color(51, 102, 255));
        cargarTitulos1();
        cargardatos();
        tbpercep.setDefaultRenderer(Object.class, new EJefes());
    }
    //creacion de modelo de tabla 
    DefaultTableModel tabla1 = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int Fila, int Colum) {
            return false;
        }
    };
//mmetodo de busqueda 
    public void filtroBusqueda(JTextField txt) {
        trsFiltro.setRowFilter(RowFilter.regexFilter(txt.getText()));
    }
//remueve los datos de la tabla 
    public void limpiar(DefaultTableModel tabla) {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            tabla.removeRow(i);
            i -= 1;
        }
    }
//carga los datos de la tabla 
    private void cargardatos() {
        String sql = "SELECT * FROM nomPercepciones";

        Object datos[] = new Object[13];
        try {
            conn = (this.userConn != null) ? this.userConn : Conexion.getConnection();
            stmt = conn.prepareStatement(sql);
            rs = stmt.executeQuery();
            while (rs.next()) {
                datos[0] = rs.getString("idNomPer");
                datos[1] = rs.getString("nombre");
                datos[2] = rs.getString("dias");
                if (rs.getString("estatus").equalsIgnoreCase("1")) {
                    datos[3] = new JLabel(new ImageIcon(getClass().getResource("/View/img/actulizadoj.png")));
                } else {
                    datos[3] = new JLabel(new ImageIcon(getClass().getResource("/View/img/noactualizadoj.png")));
                }

                tabla1.addRow(datos);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al cargar los datos\n" + e, "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            Conexion.close(rs);
            Conexion.close(stmt);
            if (this.userConn == null) {
                Conexion.close(conn);
            }
        }
    }
//carga los titulos de la tabla 
    public void cargarTitulos1() throws SQLException {

        tabla1.addColumn("CLAVE");
        tabla1.addColumn("NOMBRE");
        tabla1.addColumn("DIAS");
        tabla1.addColumn("ESTATUS");

        this.tbpercep.setModel(tabla1);

        TableColumnModel columnModel = tbpercep.getColumnModel();

        columnModel.getColumn(0).setPreferredWidth(15);
        columnModel.getColumn(1).setPreferredWidth(150);
        columnModel.getColumn(2).setPreferredWidth(50);
        columnModel.getColumn(3).setPreferredWidth(70);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuOpciones = new javax.swing.JPopupMenu();
        ItemActivar = new javax.swing.JMenuItem();
        Itemdesactivar = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        btnmini = new javax.swing.JButton();
        btncerrar = new javax.swing.JButton();
        btnregresar = new javax.swing.JButton();
        lblnombrerh = new javax.swing.JLabel();
        lblcargo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbpercep = new javax.swing.JTable();
        panelreginc = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        GuardarIn = new javax.swing.JButton();
        txtdias = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        ItemActivar.setText("Activar");
        ItemActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemActivarActionPerformed(evt);
            }
        });
        MenuOpciones.add(ItemActivar);

        Itemdesactivar.setText("Desactivar");
        Itemdesactivar.setToolTipText("");
        Itemdesactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemdesactivarActionPerformed(evt);
            }
        });
        MenuOpciones.add(Itemdesactivar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(229, 230, 234));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnmini.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/img/minimizar.png"))); // NOI18N
        btnmini.setBorderPainted(false);
        btnmini.setContentAreaFilled(false);
        btnmini.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnminiActionPerformed(evt);
            }
        });
        jPanel1.add(btnmini, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 0, 32, 30));

        btncerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/img/error.png"))); // NOI18N
        btncerrar.setBorderPainted(false);
        btncerrar.setContentAreaFilled(false);
        btncerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncerrarActionPerformed(evt);
            }
        });
        jPanel1.add(btncerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 0, 32, 30));

        btnregresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/img/regresar.png"))); // NOI18N
        btnregresar.setBorderPainted(false);
        btnregresar.setContentAreaFilled(false);
        btnregresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnregresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnregresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, 32, 30));

        lblnombrerh.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblnombrerh.setForeground(new java.awt.Color(51, 102, 255));
        lblnombrerh.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 102, 255)));
        jPanel1.add(lblnombrerh, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 20, 250, 20));

        lblcargo.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblcargo.setForeground(new java.awt.Color(51, 102, 255));
        lblcargo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 102, 255)));
        jPanel1.add(lblcargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 210, 20));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/img/user.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, 40));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/img/portafolio.png"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, -1, 40));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Registro de percepciones y deducciones");

        tbpercep= new javax.swing.JTable(){
            public boolean  isCellEditable(int rowIndex,int conlIndex ){
                return false;
            }
        };
        tbpercep.setAutoCreateRowSorter(true);
        tbpercep.setForeground(new java.awt.Color(51, 51, 51));
        tbpercep.setComponentPopupMenu(MenuOpciones);
        tbpercep.setDropMode(javax.swing.DropMode.INSERT_ROWS);
        tbpercep.setFillsViewportHeight(true);
        tbpercep.setGridColor(new java.awt.Color(255, 255, 255));
        tbpercep.setInheritsPopupMenu(true);
        tbpercep.setIntercellSpacing(new java.awt.Dimension(2, 2));
        tbpercep.setSelectionBackground(new java.awt.Color(108, 180, 221));
        tbpercep.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane3.setViewportView(tbpercep);

        panelreginc.setBackground(new java.awt.Color(51, 102, 255));
        panelreginc.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre Incidencia");

        txtnombre.setBackground(new java.awt.Color(51, 102, 255));
        txtnombre.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtnombre.setForeground(new java.awt.Color(255, 255, 255));
        txtnombre.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnombreKeyReleased(evt);
            }
        });

        GuardarIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/img/save1.png"))); // NOI18N
        GuardarIn.setContentAreaFilled(false);
        GuardarIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarInActionPerformed(evt);
            }
        });

        txtdias.setBackground(new java.awt.Color(51, 102, 255));
        txtdias.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtdias.setForeground(new java.awt.Color(255, 255, 255));
        txtdias.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtdias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtdiasKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Numero de dias");

        javax.swing.GroupLayout panelregincLayout = new javax.swing.GroupLayout(panelreginc);
        panelreginc.setLayout(panelregincLayout);
        panelregincLayout.setHorizontalGroup(
            panelregincLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelregincLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelregincLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelregincLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addGroup(panelregincLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtdias, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelregincLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GuardarIn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        panelregincLayout.setVerticalGroup(
            panelregincLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelregincLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelregincLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelregincLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelregincLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtdias, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(GuardarIn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtBuscar.setBackground(new java.awt.Color(51, 102, 255));
        txtBuscar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtBuscar.setForeground(new java.awt.Color(255, 255, 255));
        txtBuscar.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/img/search1.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(panelreginc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelreginc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnminiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnminiActionPerformed
        //minimiza la ventana 
        this.setExtendedState(ICONIFIED);        // TODO add your handling code here:
    }//GEN-LAST:event_btnminiActionPerformed

    private void btncerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncerrarActionPerformed
        //cierra todo el sistema 
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_btncerrarActionPerformed

    private void btnregresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnregresarActionPerformed
        //regresa a la ventana anterior 
        String cargo = RH_Inicio.lblcargo.getText();
        String nombre = RH_Inicio.lblnombrerh.getText();
        RH_Inicio rh_i = new RH_Inicio();
        rh_i.setVisible(true);
        RH_Inicio.lblcargo.setText(cargo);
        RH_Inicio.lblnombrerh.setText(nombre);
        this.setVisible(false);
    }//GEN-LAST:event_btnregresarActionPerformed

    private void txtnombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnombreKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombreKeyReleased

    private void GuardarInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarInActionPerformed
        // valida que los campos esten llenos y guarda la nueva incidencia 
        String Nompercepcion = txtnombre.getText();
        String numdias = txtdias.getText();
        try {
            if (Nompercepcion.equals("") && numdias.equals("")) {
                JOptionPane.showMessageDialog(null, "Ambos campos estan vacios", "", JOptionPane.WARNING_MESSAGE);
            } else if (Nompercepcion.equals("")) {
                JOptionPane.showMessageDialog(null, "El campo nombre esta vacio", "", JOptionPane.WARNING_MESSAGE);
            } else if (numdias.equals("")) {
                JOptionPane.showMessageDialog(null, "El campo dias esta vacio", "", JOptionPane.WARNING_MESSAGE);
            } else {
                PercepcionesDeducciones per = new PercepcionesDeducciones();
                per.newPercep(Nompercepcion, numdias);
                txtnombre.setText("");
                txtdias.setText("");
                limpiar(tabla1);
                cargardatos();
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e, "", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_GuardarInActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        limpiar(tabla1);


    }//GEN-LAST:event_txtBuscarKeyReleased

    private void ItemActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemActivarActionPerformed
        //activa la percepcion seleccionada 
        try {
            PercepcionesDeducciones percep = new PercepcionesDeducciones();
            int numfila = tbpercep.getSelectedRowCount();
            int fila = tbpercep.getSelectedRow();
           
            if (numfila == 1) {
                 System.out.println(numfila);
                String semana = tbpercep.getValueAt(fila, 0).toString();
                System.out.println(semana);
                percep.activar(semana);
                limpiar(tabla1);
                cargardatos();
            } else if(numfila==0){
                 System.out.println(numfila);
                JOptionPane.showMessageDialog(null, "Seleccione una fila ", "", JOptionPane.WARNING_MESSAGE);

            }else if (numfila > 1){
                int codi[] = tbpercep.getSelectedRows();
                 System.out.println(numfila);
                String semana[]= new String[numfila];
                for (int i = 0; i < numfila; i++) {
                    semana[i]=tbpercep.getValueAt(codi[i], 0).toString();
                    String sem=semana[i];
                    percep.activar(sem);
                    
                }
                limpiar(tabla1);
                cargardatos();
                
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Error en: " + e, "ERROR", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_ItemActivarActionPerformed

    private void ItemdesactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemdesactivarActionPerformed
        //desactiva la percepcion seleccionada 
        try {
            int numfila = tbpercep.getSelectedRowCount();
            int fila = tbpercep.getSelectedRow();
            PercepcionesDeducciones percep = new PercepcionesDeducciones();
            if (numfila == 1) {
                String semana = tbpercep.getValueAt(fila, 0).toString();
                percep.desactivar(semana);
                limpiar(tabla1);
                cargardatos();
            } else if(numfila==0){
                JOptionPane.showMessageDialog(null, "", "", JOptionPane.WARNING_MESSAGE);
            }else if (numfila > 1){
                int codi[] = tbpercep.getSelectedRows();
                 System.out.println(numfila);
                String semana[]= new String[numfila];
                for (int i = 0; i < numfila; i++) {
                    semana[i]=tbpercep.getValueAt(codi[i], 0).toString();
                    String sem=semana[i];
                    percep.desactivar(sem);
                    
                }
                limpiar(tabla1);
                cargardatos();
                
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error en:  " + e, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ItemdesactivarActionPerformed

    private void txtdiasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdiasKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdiasKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RH_NewPercepciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RH_NewPercepciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RH_NewPercepciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RH_NewPercepciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RH_NewPercepciones().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(RH_NewPercepciones.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GuardarIn;
    private javax.swing.JMenuItem ItemActivar;
    private javax.swing.JMenuItem Itemdesactivar;
    private javax.swing.JPopupMenu MenuOpciones;
    private javax.swing.JButton btncerrar;
    private javax.swing.JButton btnmini;
    private javax.swing.JButton btnregresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JLabel lblcargo;
    public static javax.swing.JLabel lblnombrerh;
    private javax.swing.JPanel panelreginc;
    private javax.swing.JTable tbpercep;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtdias;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables
}
